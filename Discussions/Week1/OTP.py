import random       #importing functions from Lib/random

"""
Author: David Qiu

The purpose of this program is to implement Shannon's One-Time Pad (OTP)
and to illustrate the correctness of the encryption scheme.
OTP is an example of a private-key encryption as the encryption key (K_e)
is equal to the decryption key (K_d) and both are kept secret from any adversary.
The scheme itself can be described as a tuple of three algorithms: Key Generation,
Encryption, and Decryption. The key generation algorithm is dependent on a security parameter,
which describes how long (bitwise) the key is. Both encryption and decryption algorithm involve
XOR'ing the message/ciphertext with the key.
"""
PARAMETER = 100

def keyGen(p):
  """
  :param p: security paramter
  :output k: a number randomly chosen in the keyspace {0,1}^k, assigned to be K_e and K_d
  """
  k = random.randint(0, 2**p-1)         # ** is the operator for exponetiation
  return k

def Enc(m, k):
  """
  :param m: the message to be encrypted,
            whose bitlength must also be equal to the security parameter
  :param k: encryption key, K_e, generated by the key generation algorithm
  :output c: ciphertext corresponding to encrypting the message
  """
  c = m ^ k                            # ^ is the operator for bitwise XOR
  return c
  
def Dec(c, k):
  """
  :param c: the ciphertext to be decrypted,
            whose bitlength must also be equal to the security parameter
  :param k: decryption key, K_d, generated by the key generation algorithm
  :output m: message corresponding to decrypting the ciphertext
  """
  m = c ^ k
  return m
  
"""
now to show that the above functions are correct. We will encrypt a random message
and verify that decrypting the corresponding ciphertext will reveal the same message
"""

key = keyGen(PARAMETER)
message = random.randint(0, 2**PARAMETER-1)
#print(message)
ciphertext = Enc(message, key)
response = Dec(ciphertext, key)
#print(response)
if response == message:
  print("Success")
else:
  print("Something went wrong")
